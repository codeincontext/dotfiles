" Behavioural Configuration
""""""""""""""""""""""""""""

" without this, GitGutter slows down
" with it, new terms open in bash :/
set shell=/bin/bash

set mouse=a

" hide buffers instead of closing them (keeps undo buffers, etc)
set hidden

" it's the future and we have git
set nobackup
set noswapfile

" Assume to ignore case in searches etc
set ignorecase
set smartcase

set incsearch

" Spaces > tabs
set expandtab
set smarttab

" 2 spaces > 8 spaces
set shiftwidth=2
set softtabstop=2

" allow backspace across indentation and lines
set backspace=indent,eol

" makefiles use tabs
autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab

let g:terminal_scrollback_buffer_size=10000


"" Visual Configuration
"""""""""""""""""""""""

" Highlight matching parenthesis
" highlight MatchParen ctermbg=4 " disabled while I try rainbow-parenthesis

" show trailing spaces
set list listchars=tab:\ \ ,trail:Â·

" show line at 80 chars
set tw=80
set colorcolumn=+1

" Setting both relativenumber and number enables hybrid line number mode
set relativenumber
set number

" iterm nightlies support true color
let $NVIM_TUI_ENABLE_TRUE_COLOR=1

let g:terminal_color_0='#2b303b'
let g:terminal_color_1='#bf616a'
let g:terminal_color_2='#a3be8c'
let g:terminal_color_3='#ebcb8b'
let g:terminal_color_4='#8fa1b3'
let g:terminal_color_5='#b48ead'
let g:terminal_color_6='#96b5b4'
let g:terminal_color_7='#c0c5ce'
let g:terminal_color_8='#65737e'
let g:terminal_color_9='#bf616a'
let g:terminal_color_10='#a3be8c'
let g:terminal_color_11='#ebcb8b'
let g:terminal_color_12='#8fa1b3'
let g:terminal_color_13='#b48ead'
let g:terminal_color_14='#96b5b4'
let g:terminal_color_14='eff1f5'

"" Key Mappings
"""""""""""""""

" leader for loading plugins like file navigation and overlays
" - for custom text editing commands like camelCaseMotion
map <Space> <Leader>


nmap <leader>s :terminal fish<CR>

" use leader for window movement stuff
" nnoremap <space>h <c-w>h
" nnoremap <space>j <c-w>j
" nnoremap <space>k <c-w>k
" nnoremap <space>l <c-w>l

nnoremap  <silent>   <tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bnext<CR>
nnoremap  <silent> <s-tab>  :if &modifiable && !&readonly && &modified <CR> :write<CR> :endif<CR>:bprevious<CR>

" open the buffer in a new fullscreen tab (like tmux's <ctrl-a>z)
noremap <leader>z :tab split<CR>

" make Y yank to end of line (like it should always have done)
nmap Y y$

" use the enter key to enter command mode
nmap <CR> :

" don't yank the replaced text when pasting in visual mode
vnoremap p "_dP

" paste something on a new line
nmap -p o<ESC>p

" don't add to jump list when navigating by paragraph
nnoremap <silent> { :keepjumps normal! {<CR>
nnoremap <silent> } :keepjumps normal! }<CR>

nnoremap <BS> <C-o>
nnoremap <s-BS> <C-i>

"" Fast pane switching
""""""""""""""""""""""

" should add 1 if nerdtree's open
" top left
nmap <silent> <leader>u 1<c-w>w
" top left then right one
nmap <silent> <leader>i 1<c-w>w<c-w>l
" top left then right two
nmap <silent> <leader>o 1<c-w>w<c-w>l<c-w>l
" bottom right then left two
nmap <silent> <leader>j 99<c-w>w<c-w>h<c-w>h
" bottom right then left one
nmap <silent> <leader>k 99<c-w>w<c-w>h
" bottom right
nmap <silent> <leader>l 99<c-w>w


"" Plugins
""""""""""

" you'll need vim-plug installed
call plug#begin('~/.vim/plugged')

"" Plugins: Managing files
""""""""""""""""""""""""""

" Project drawer
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
map <leader>n :NERDTreeToggle<CR>

" fuzzy finder
" TODO: on-demand
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
map <leader>t :FZF<cr>


"" Plugins: Editing text
""""""""""""""""""""""""

" gcc to toggle comments on current line. gc{motion} to toggle comments over a selection
Plug 'tpope/vim-commentary', { 'on': '<Plug>Commentary' }
map  gc  <Plug>Commentary
nmap gcc <Plug>CommentaryLine

" Where ci{ changes the contents of curly braces, cir will change the contents of the current ruby block, if statement, method or class
Plug 'textobj-user'
Plug 'textobj-rubyblock'

" TODO: on-demand
Plug 'skattyadz/charlie.vim'

" todo: on-demand?
Plug 'bkad/CamelCaseMotion'
xmap  i-e    <Plug>CamelCaseMotion_ie
omap  i-e    <Plug>CamelCaseMotion_ie
xmap  i-b    <Plug>CamelCaseMotion_ib
omap  i-b    <Plug>CamelCaseMotion_ib
xmap  i-w    <Plug>CamelCaseMotion_iw
omap  i-w    <Plug>CamelCaseMotion_iw
map   -e     <Plug>CamelCaseMotion_e
map   -b     <Plug>CamelCaseMotion_b
map   -w     <Plug>CamelCaseMotion_w

" consider https://github.com/junegunn/vim-easy-align


"" Plugins: Analysing code
""""""""""""""""""""""""""

" [c and ]c to jump between hunks
" <leader>hs to stage
" <leader>hr to revert
" <leader>hp to preview
Plug 'airblade/vim-gitgutter'

" Code linter
" on?
Plug 'scrooloose/syntastic', { 'on': 'SyntasticCheck' }
let g:syntastic_auto_jump=0

" Automatic completion for variable names, etc
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh', 'on': [] }
command! YcmCompleter call plug#load('YouCompleteMe') | call youcompleteme#Enable() | YcmCompleter


"" Plugins: Visual
""""""""""""""""""

" Plug 'morhetz/gruvbox'  bold function names is quite nice
Plug 'chriskempson/base16-vim' " bold do/end keywords is annoying

Plug 'junegunn/rainbow_parentheses.vim', { 'on': 'RainbowParentheses' }
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]
map <silent> <leader>r :RainbowParentheses!!<cr>

Plug 'ap/vim-css-color', { 'for': ['css', 'scss'] }

" highlights one letter of each word that you can jump to with f
Plug 'unblevable/quick-scope'

" nmap <leader>q <plug>(QuickScopeToggle)
" vmap <leader>q <plug>(QuickScopeToggle)

call plug#end()

"" Post-plugin-init config
""""""""""""""""""""""""""

set background=dark
colorscheme base16-ocean
" colorscheme gruvbox

" open nerdtree on load if it's a directory
if isdirectory(argv(0))
    bd
    autocmd vimenter * exe "cd" argv(0)
    autocmd VimEnter * NERDTree
endif

" Close if the only thing left is nerdtree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
